# app/telegram_bot.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
import asyncio
import httpx
import os
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")
ADMIN_PASSWORD = os.getenv("ADMIN_PASSWORD", "admin123")


class TelegramBot:
    def __init__(self, token: str):
        self.token = token
        self.base_url = f"https://api.telegram.org/bot{token}"

    async def send_message(self, chat_id: int, text: str, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        async with httpx.AsyncClient() as client:
            url = f"{self.base_url}/sendMessage"
            data = {
                "chat_id": chat_id,
                "text": text,
                "parse_mode": "HTML",
                "disable_web_page_preview": True
            }
            if reply_markup:
                data["reply_markup"] = reply_markup

            response = await client.post(url, json=data)
            return response.json()

    async def send_webapp_button(self, chat_id: int, text: str, webapp_url: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å WebApp"""
        keyboard = {
            "inline_keyboard": [[{
                "text": "üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                "web_app": {"url": webapp_url}
            }]]
        }

        return await self.send_message(chat_id, text, keyboard)

    async def set_webhook(self, webhook_url: str):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook"""
        async with httpx.AsyncClient() as client:
            url = f"{self.base_url}/setWebhook"
            data = {"url": webhook_url}
            response = await client.post(url, json=data)
            return response.json()

    async def get_updates(self, offset=None):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–¥–ª—è polling)"""
        async with httpx.AsyncClient() as client:
            url = f"{self.base_url}/getUpdates"
            params = {"timeout": 10}
            if offset:
                params["offset"] = offset

            response = await client.get(url, params=params)
            return response.json()


def is_admin_user(telegram_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    admin_ids_str = os.getenv("ADMIN_TELEGRAM_IDS", "123456789")
    admin_ids = [int(id_str.strip()) for id_str in admin_ids_str.split(",") if id_str.strip()]
    return telegram_id in admin_ids


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def handle_start_command(chat_id: int, first_name: str = ""):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    bot = TelegramBot(BOT_TOKEN)

    welcome_text = f"""
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

–≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤.

<b>–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ üë• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –≤–æ–ª–æ–Ω—Ç—ë—Ä 
‚Ä¢ üè¢ –°—Ç–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
‚Ä¢ üìÖ –ù–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
‚Ä¢ üí∞ –ü–æ–ª—É—á–∞—Ç—å –æ–ø–ª–∞—Ç—É –∑–∞ —É—á–∞—Å—Ç–∏–µ

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
    """

    await bot.send_webapp_button(chat_id, welcome_text.strip(), WEBAPP_URL)


async def handle_admin_command(chat_id: int, user_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin"""
    bot = TelegramBot(BOT_TOKEN)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not is_admin_user(user_id):
        await bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º admin_auth —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    try:
        from .admin_auth import admin_auth
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        admin_token = admin_auth.generate_bot_token()
    except ImportError:
        print("‚ùå Failed to import admin_auth")
        await bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return

    # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    admin_url = f"{WEBAPP_URL}/admin/login?token={admin_token}"

    admin_text = f"""
üîê <b>–î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏</b>

–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:
<a href="{admin_url}">üöÄ –í–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a>

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 2 —á–∞—Å–∞
‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å—Å—ã–ª–∫—É —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º
‚Ä¢ –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å

<b>–õ–æ–≥–∏–Ω:</b> <code>admin</code>
<b>–ü–∞—Ä–æ–ª—å:</b> <code>{ADMIN_PASSWORD}</code>

<i>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É:</i>
<code>{admin_url}</code>
    """

    await bot.send_message(chat_id, admin_text.strip())


async def handle_help_command(chat_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    bot = TelegramBot(BOT_TOKEN)

    help_text = """
üÜò <b>–ü–æ–º–æ—â—å</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/volunteer - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞
/organizer - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞

<b>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>
/admin - –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    """

    await bot.send_message(chat_id, help_text.strip())


async def handle_volunteer_command(chat_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /volunteer"""
    bot = TelegramBot(BOT_TOKEN)
    await bot.send_webapp_button(
        chat_id,
        "üë• –ü—Ä–æ—Ñ–∏–ª—å –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞",
        f"{WEBAPP_URL}/volunteer/profile"
    )


async def handle_organizer_command(chat_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /organizer"""
    bot = TelegramBot(BOT_TOKEN)
    await bot.send_webapp_button(
        chat_id,
        "üè¢ –ü—Ä–æ—Ñ–∏–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞",
        f"{WEBAPP_URL}/organizer/profile"
    )


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
async def start_polling():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
    bot = TelegramBot(BOT_TOKEN)
    offset = None

    print(f"ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! WebApp URL: {WEBAPP_URL}")
    print(f"üîê –ê–¥–º–∏–Ω –ø–∞—Ä–æ–ª—å: {ADMIN_PASSWORD}")

    while True:
        try:
            updates = await bot.get_updates(offset)

            if updates.get("ok") and updates.get("result"):
                for update in updates["result"]:
                    offset = update["update_id"] + 1

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
                    if "message" in update and "text" in update["message"]:
                        message = update["message"]
                        chat_id = message["chat"]["id"]
                        user_id = message["from"]["id"]
                        text = message["text"]
                        first_name = message["from"].get("first_name", "")

                        print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {text}")

                        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                        if text.startswith("/start"):
                            await handle_start_command(chat_id, first_name)
                        elif text == "/admin":
                            await handle_admin_command(chat_id, user_id)
                        elif text == "/help":
                            await handle_help_command(chat_id)
                        elif text == "/volunteer":
                            await handle_volunteer_command(chat_id)
                        elif text == "/organizer":
                            await handle_organizer_command(chat_id)
                        else:
                            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
                            await bot.send_message(
                                chat_id,
                                "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
                            )

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {e}")
            await asyncio.sleep(5)


if __name__ == "__main__":
    asyncio.run(start_polling())