import httpx
import asyncio
from typing import Optional
import os


class TelegramBot:
    def __init__(self, token: str):
        self.token = token
        self.base_url = f"https://api.telegram.org/bot{token}"

    async def send_message(self, chat_id: int, text: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            async with httpx.AsyncClient() as client:
                url = f"{self.base_url}/sendMessage"
                data = {
                    "chat_id": chat_id,
                    "text": text,
                    "parse_mode": "HTML"
                }
                await client.post(url, json=data)
        except Exception as e:
            print(f"Error sending message: {e}")

    async def send_webapp_button(self, chat_id: int, text: str, webapp_url: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å WebApp"""
        keyboard = {
            "inline_keyboard": [[{
                "text": "üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                "web_app": {"url": webapp_url}
            }]]
        }

        try:
            async with httpx.AsyncClient() as client:
                url = f"{self.base_url}/sendMessage"
                data = {
                    "chat_id": chat_id,
                    "text": text,
                    "reply_markup": keyboard,
                    "parse_mode": "HTML"
                }
                await client.post(url, json=data)
        except Exception as e:
            print(f"Error sending webapp button: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
bot = TelegramBot(os.getenv("BOT_TOKEN"))


# –§—É–Ω–∫—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def notify_application_status(user_telegram_id: int, event_title: str, status: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏"""
    messages = {
        "approved": f"‚úÖ <b>–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!</b>\n\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>'{event_title}'</b> –æ–¥–æ–±—Ä–µ–Ω–∞!\n\nüéâ –û–∂–∏–¥–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.",
        "rejected": f"‚ùå <b>–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>'{event_title}'</b> –Ω–µ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\nüí™ –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –¥—Ä—É–≥–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!"
    }

    message = messages.get(status, f"üìã –°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ '{event_title}' –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {status}")
    await bot.send_message(user_telegram_id, message)


async def notify_new_event(user_telegram_id: int, event_title: str, city: str, payment: float = 0):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –≤ –≥–æ—Ä–æ–¥–µ"""
    text = f"""
üÜï <b>–ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!</b>

üìÖ <b>{event_title}</b>
üìç –ì–æ—Ä–æ–¥: {city}
üí∞ –û–ø–ª–∞—Ç–∞: {payment} ‚ÇΩ

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É!
    """
    await bot.send_message(user_telegram_id, text)


async def notify_new_application(organizer_telegram_id: int, event_title: str, volunteer_name: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ"""
    text = f"""
üìã <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>

–í–æ–ª–æ–Ω—Ç—ë—Ä <b>{volunteer_name}</b> –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ –≤–∞—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>'{event_title}'</b>

–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫—É.
    """
    await bot.send_message(organizer_telegram_id, text)
